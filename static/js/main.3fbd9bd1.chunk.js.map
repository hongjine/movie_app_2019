{"version":3,"sources":["routes/About.js","routes/Detail.js","components/Movie.js","routes/Home.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Detail","this","location","history","state","undefined","push","title","React","Component","Movie","id","year","summary","poster","genres","to","pathname","src","alt","map","g","index","key","slice","prototype","PropType","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","async","axios","get","data","setState","m","medium_cover_image","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8TAgBeA,MAbf,SAAeC,GAGX,OAFAC,QAAQC,IAAIF,GAGR,yBAAKG,UAAU,oBACX,8FAGA,0D,wCCqBGC,E,4LA1BS,MAGYC,KAAKL,MAA1BM,EAHS,EAGTA,SAAUC,EAHD,EAGCA,QACjBN,QAAQC,IAAII,EAASE,YAECC,IAAnBH,EAASE,OACRD,EAAQG,KAAK,O,+BASjBT,QAAQC,IAAIG,KAAKL,OALZ,IAMEM,EAAYD,KAAKL,MAAjBM,SACP,OAAGA,EAASE,MACD,8BAAOF,EAASE,MAAMG,OAEtB,S,GAvBEC,IAAMC,W,wDCC3B,SAASC,EAAT,GAA4D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAML,EAAiC,EAAjCA,MAAOM,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC9C,OACI,yBAAKhB,UAAU,SACf,kBAAC,IAAD,CAAMiB,GAAI,CACNC,SAAS,UAAD,OAAYN,GACpBP,MAAO,CACHQ,OACAL,QACAM,UACAC,SACAC,YAGJ,yBAAKG,IAAKJ,EAAQK,IAAKZ,EAAOA,MAAOA,IACrC,yBAAKR,UAAU,eACX,wBAAIA,UAAU,gBAAgBQ,GAC9B,wBAAIR,UAAU,eAAea,GAC7B,wBAAIb,UAAU,iBACTgB,EAAOK,KAAI,SAACC,EAAGC,GAAJ,OACR,wBAAIC,IAAKD,EAAOvB,UAAU,iBACrBsB,OAIb,uBAAGtB,UAAU,kBAAkBc,EAAQW,MAAM,EAAG,KAAhD,UAOhBd,EAAMe,UAAY,CACdd,GAAIe,IAASC,OAAOC,WACpBhB,KAAMc,IAASC,OAAOC,WACtBrB,MAAOmB,IAASG,OAAOD,WACvBf,QAASa,IAASG,OAAOD,WACzBd,OAAQY,IAASG,OAAOf,OACxBC,OAAQW,IAASI,QAAQJ,IAASG,QAAQD,YAG/BlB,QCgBAqB,G,iNAvDb3B,MAAQ,CACN4B,WAAW,EACXC,OAAQ,I,EAGVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MASAE,IAAMC,IAAI,0DATV,gBAMCL,EAND,EAKRM,KACEA,KAAON,OAKXpC,QAAQC,IAAImC,GAEZ,EAAKO,SAAS,CACZP,OAASA,EACTD,WAAY,IAfJ,sC,qJAsBV/B,KAAKiC,Y,gFAGG,IAAD,EACqBjC,KAAKG,MAA1B4B,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OAAO,6BAASlC,UAAU,aACvBiC,EACC,yBAAKjC,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACXkC,EAAOb,KAAI,SAAAqB,GAAC,OACZ,kBAAC,EAAD,CACElB,IAAKkB,EAAE9B,GACPA,GAAI8B,EAAE9B,GACNC,KAAM6B,EAAE7B,KACRL,MAAOkC,EAAElC,MACTM,QAAS4B,EAAE5B,QACXC,OAAQ2B,EAAEC,mBACV3B,OAAQ0B,EAAE1B,kB,GAhDPP,IAAMC,Y,MCQVkC,MATf,WACI,OAAO,yBAAK5C,UAAU,OAGlB,kBAAC,IAAD,CAAMiB,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCoBO4B,MAnBf,WACE,OASA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWhB,IACxC,kBAAC,IAAD,CAAOc,KAAK,SAASE,UAAWpD,IAChC,kBAAC,IAAD,CAAOkD,KAAK,aAAaE,UAAW/C,MCpBxCgD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3fbd9bd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props)\r\n\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus two make four.\"\r\n            </span>\r\n            <span>- Georage Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n// redirection처리를 위해 class형으로 변경\r\n// Detail Component는 Route로 설정되어 있어서, 기본적으로 Props를 받는다.\r\nclass Detail extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props) -> history를 이용하여 redirection\r\n\r\n        const {location, history} = this.props;\r\n        console.log(location.state)\r\n\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // render함수가 componentDidMount함수보다 선행되므로,\r\n        // 직접적으로 '/movie/${id}'을 호출하면, props에 location.state이 없다. 이를 예외처리 해야한다.\r\n        // 2가지 방법이 존재.\r\n        // 1. 직접적으로 예외처리 state가 undefined인지 아닌지. \r\n        console.log(this.props)\r\n        const {location} = this.props;\r\n        if(location.state) {\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react'\r\nimport PropType from 'prop-types'\r\nimport './Movie.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}) {\r\n    return (\r\n        <div className='movie'>\r\n        <Link to={{\r\n            pathname: `/movie/${id}`,\r\n            state: {\r\n                year,\r\n                title,\r\n                summary,\r\n                poster,\r\n                genres\r\n            }\r\n        }}>\r\n            <img src={poster} alt={title} title={title}></img>\r\n            <div className='movie__data'>\r\n                <h3 className='movie__title'>{title}</h3>\r\n                <h5 className='movie__year'>{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((g, index) => (\r\n                        <li key={index} className='genres__genre'>\r\n                            {g}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n        </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.prototype = {\r\n    id: PropType.number.isRequired,\r\n    year: PropType.number.isRequired,\r\n    title: PropType.string.isRequired,\r\n    summary: PropType.string.isRequired,\r\n    poster: PropType.string.poster,\r\n    genres: PropType.arrayOf(PropType.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: [] //선언을 안해도 setState를 이용해서 추가할 수 있지만, 미래에 사용할 state를 뿌려주는게 좋다.\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // const movieOrigin = await axios.get('https://yts-proxy.now.sh/list_movies.json');\r\n\r\n    // console.log(movieOrigin)\r\n    const {\r\n      data: {\r\n        data: {movies}\r\n      }\r\n    // } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    } = await axios.get('https://yts.lt/api/v2/list_movies.json?sort_by=rating')\r\n\r\n    console.log(movies)\r\n\r\n    this.setState({\r\n      movies : movies,\r\n      isLoading : false\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    //fetch\r\n    //axios\r\n    //https://yts-proxy.now.sh/list_movies.json\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const {isLoading, movies} = this.state;\r\n    return <section className='container'>\r\n      {isLoading ? (\r\n        <div className='loader'>\r\n          <span className='loader__text'>Loading...</span>\r\n        </div>\r\n        ) : (\r\n          <div className='movies'>\r\n            { movies.map(m => (\r\n              <Movie \r\n                key={m.id} \r\n                id={m.id} \r\n                year={m.year} \r\n                title={m.title} \r\n                summary={m.summary} \r\n                poster={m.medium_cover_image} \r\n                genres={m.genres}/>\r\n            ))}          \r\n          </div>\r\n        )\r\n    }</section>\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\"\r\n\r\nfunction Navigation() {\r\n    return <div className=\"nav\">\r\n        {/* <a href=\"/\">Home</a> // React를 죽이고, 새로고침을 하게됨.\r\n        <a href=\"/about\">About</a> */}\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n// 여러 종류가 있음\nimport About from './routes/About';\nimport Detail from './routes/Detail';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation'\nimport './App.css'\n\n// 라우터 : URL을 확인해서, 명령에 따라 컴포넌트 호출\nfunction App() {\n  return (\n  // 이 방법을 사용하면, Home과 About이 겹쳐서 보인다. url을 가져와서, 위에서 아래로 비교하면서 겹치는 게 있으면 랜더링. \n  // <HashRouter>\n  //   <Route path='/' component={Home}/>\n  //   <Route path='/about' component={About}/>\n  // </HashRouter>\n\n  // BrowserRouter도 가능하다\n  // Route -> Component에 Props를 내려준다.\n  <HashRouter> \n    <Navigation />\n    <Route path='/' exact={true} component={Home}/>\n    <Route path='/about' component={About}/>\n    <Route path='/movie/:id' component={Detail}/>\n  </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}